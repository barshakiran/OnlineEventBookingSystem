@model OnlineEventBookingSystemUI.Models.BookingDetailViewModel

@{
    ViewBag.Title = "DisplayBookingEventDetails";
}

<h2>Booking Event</h2>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnCalculate").click(function () {
                var price = $("#Price").text();
                var tCount = $("#Booking_TicketCount").val();
                var total = parseFloat(price * tCount);
                // alert(price);
                $("#Booking_TotalAmount").val(total);

            });
        })

    </script>)
}

@using (Html.BeginForm("AddUserBookingEventDetail", "UserEventDetail", FormMethod.Post))
{

<div class="form-horizontal" style="border: solid 1px #ccc; padding: 30px 0 30px 30px; border-radius: 5px; width: 450px; margin: auto; display: table;">
    <h4>Enter Details:-</h4>
    <dl class="dl-horizontal">

        <dd>
            <img class="img-responsive" src="@Url.Content(Model.Event_Picture)" alt="IMAGES" height="50px" width="50px" />
        </dd>
        <dd>
            @Html.HiddenFor(model => model.Location_Id)
        </dd>
        <dd>
            @Html.HiddenFor(model => model.Event_Id)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event_Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event_Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event_Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event_Type)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event_Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event_Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Booking_Loc)
        </dt>

        <dd>
            @Html.EditorFor(model => model.Booking_Loc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EventLocation_Price)
        </dt>

        <dd id="Price">
            @Html.DisplayFor(model => model.EventLocation_Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Booking_Date)
        </dt>

        <dd>
            @Html.EditorFor(model => model.Booking_Date)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.userName)
        </dt>

        <dd>
            @Html.EditorFor(model => model.userName)
        </dd>
    </dl>
    <div class="form-group">
        @Html.ValidationSummary(true)
        @Html.LabelFor(model => model.Booking_TicketCount, htmlAttributes: new { @class = "control-label col-md-2", style = "width:auto" })
        <div class="col-md-10" style="width:auto">
            @Html.EditorFor(model => model.Booking_TicketCount)
            @Html.ValidationMessageFor(model => model.Booking_TicketCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Booking_TotalAmount, htmlAttributes: new { @class = "control-label col-md-2", style = "width:auto" })
        <div class="col-md-10" style="width:auto">
            @Html.EditorFor(model => model.Booking_TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
            <input type="button" id="btnCalculate" value="Calculate" class="btn btn-default" />
            @Html.ValidationMessageFor(model => model.Booking_TotalAmount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Payment_Mode, htmlAttributes: new { @class = "control-label col-md-2", style = "width:auto" })
        <div class="col-md-10" style="width:auto">

            @Html.DropDownListFor(model => model.Payment_Mode, Model.PaymentModeList, "--Select--", new { style = "width: 200px; height:30px;", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Payment_Mode, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsConfirmationSent, htmlAttributes: new { @class = "control-label col-md-2", style = "width:auto" })
        <div class="col-md-10" style="width:auto">
            @Html.EditorFor(model => model.IsConfirmationSent)
            @Html.ValidationMessageFor(model => model.IsConfirmationSent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Book Event" class="btn btn-default" />
        </div>
    </div>
</div>
}
<p>
    @*@if (User.Identity.IsAuthenticated)
    {*@
        <a> @Html.ActionLink("Booked Events List", "DisplayUserBookedEventsList", new { id = User.Identity.Name })</a> |
        <a> @Html.ActionLink("Back to List", "Index")</a>
  
</p>
